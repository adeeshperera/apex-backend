RAILWAY DEPLOYMENT GUIDE FOR APEX BACKEND
==========================================

COMPLETE STEP-BY-STEP DEPLOYMENT PROCESS

=== STEP 1: PREPARE YOUR REPOSITORY ===

1. Commit the changes to your Git repository:
   $ git add -A
   $ git commit -m "feat: prepare backend for Railway deployment"
   $ git push origin main

   Files committed:
   - server.js (updated with Railway health check)
   - .env.example (environment variables template)
   - Procfile (process specification for Railway)
   - railway.json (Railway configuration)

=== STEP 2: SETUP RAILWAY ACCOUNT ===

1. Go to https://railway.app
2. Click "Start a New Project" or "Login" if you already have an account
3. Connect your GitHub account
4. Authorize Railway to access your GitHub repositories

=== STEP 3: CREATE RAILWAY PROJECT ===

1. After logging in, click "New Project"
2. Select "Deploy from GitHub repo"
3. Choose your GitHub organization/user
4. Search for and select the "apex" or "apex-backend" repository
5. Select the "main" branch
6. Click "Deploy"

Railway will now automatically detect your Node.js project and start deployment.

=== STEP 4: CONFIGURE ENVIRONMENT VARIABLES ===

Once your project is created in Railway:

1. Go to your Railway project dashboard
2. Click on the deployed service (should be named "server-side" or similar)
3. Click on the "Variables" tab
4. Add the following environment variables:

   Environment Variable          | Value
   ------------------------------|----------------------------------------------
   NODE_ENV                      | production
   PORT                          | 3000 (Railway will assign automatically)
   MONGODB_URI                   | mongodb+srv://username:password@cluster.wt4zmhf.mongodb.net/?appName=Cluster0
   JWT_SECRET                    | your_jwt_secret_key_here (keep this secure!)
   CORS_ORIGIN                   | https://apex-client-side.vercel.app

5. IMPORTANT: Make sure to use your actual MongoDB connection string
6. Keep your JWT_SECRET the same as your local development secret
7. Click "Deploy" or "Redeploy" after adding variables

=== STEP 5: CONFIGURE MONGODB CONNECTION (IF NEEDED) ===

If MongoDB is not already set up:

1. Add MongoDB from Railway marketplace (optional):
   - In your Railway project, click "+ Add Service"
   - Search for "MongoDB"
   - Add MongoDB service
   - This will automatically set DATABASE_URL environment variable

2. OR use existing MongoDB Atlas:
   - Keep your existing MONGODB_URI in variables
   - Ensure your MongoDB cluster allows connections from Railway IPs
   - In MongoDB Atlas: Network Access â†’ Add IP â†’ Allow from anywhere (0.0.0.0/0)

=== STEP 6: VERIFY DEPLOYMENT ===

1. Railway dashboard will show deployment status (building â†’ deploying â†’ deployed)
2. Once deployed, you'll see a "Public URL" for your backend
3. Your backend URL will look like: https://apex-backend-production.up.railway.app (example)
4. Test the health endpoint:
   $ curl https://your-railway-url/health
   
   Expected response:
   {"status":"ok","timestamp":"2025-10-30T..."}

5. Or test API endpoint:
   $ curl https://your-railway-url/api/health
   
   Expected response:
   {"status":"Server is running","timestamp":"2025-10-30T..."}

=== STEP 7: GET YOUR RAILWAY BACKEND URL ===

1. Copy the Public URL from Railway dashboard
2. This is your new backend API base URL
3. Example format: https://apex-backend-production.up.railway.app

=== STEP 8: UPDATE FRONTEND (VERCEL) ===

Update your Vercel frontend to use the new Railway backend:

1. In your frontend's environment variables (.env.local or Vercel dashboard):
   Update: REACT_APP_API_URL or similar to your Railway URL
   Example: https://apex-backend-production.up.railway.app

2. Or update api.ts/lib.ts configuration file with new backend URL

3. Redeploy frontend on Vercel to pick up new environment variables

=== STEP 9: ENABLE AUTO-DEPLOY (OPTIONAL) ===

To automatically deploy when you push to GitHub:

1. Railway dashboard â†’ Your Project â†’ Settings
2. Enable "Auto-Deploy" on GitHub push
3. Select the branch to deploy from (main)

Now every git push will trigger a new deployment!

=== STEP 10: MONITOR DEPLOYMENT ===

Monitor your Railway deployment:

1. Railway dashboard â†’ Your Service â†’ Deployments
2. Check logs: Click on active deployment â†’ View Logs
3. Check health: Visit /health endpoint
4. Monitor metrics: View CPU, Memory, Network usage in Railway dashboard

=== IMPORTANT NOTES ===

âœ“ Your MongoDB connection must allow Railway IPs
  - If using MongoDB Atlas: Network Access â†’ 0.0.0.0/0
  - Or whitelist Railway static IP if available

âœ“ CORS is configured to only allow:
  - http://localhost:3000 (local development)
  - http://localhost:3001 (local backend)
  - https://apex-client-side.vercel.app (your Vercel frontend)

âœ“ If you add more frontend URLs in the future, update:
  /home/user4853/Documents/GitHub/Repositories/apex/apex-backend/server.js
  Line 21: Add to allowedOrigins array

âœ“ Health check endpoints:
  - GET /health (Railway health probe)
  - GET /api/health (API health check)

=== TROUBLESHOOTING ===

If deployment fails:

1. Check Railway logs for errors
2. Verify all environment variables are set
3. Ensure MongoDB URI is correct
4. Check if MongoDB allows connections from Railway
5. Verify package.json has "start" script pointing to server.js

Common issues:
- "Cannot connect to MongoDB" â†’ Check MONGODB_URI and network access
- "CORS errors" â†’ Check allowedOrigins in server.js
- "PORT already in use" â†’ Railway manages PORT automatically

If the application crashes:
1. Check Railway logs for error messages
2. Restart the deployment from Railway dashboard
3. Verify all environment variables are present

=== FINAL CHECKLIST ===

â–¡ Git repository committed and pushed
â–¡ Railway project created
â–¡ Environment variables configured
â–¡ MongoDB connection verified
â–¡ Health endpoints tested and responding
â–¡ Frontend environment variables updated
â–¡ Frontend redeployed on Vercel
â–¡ API endpoints working from frontend
â–¡ Monitoring and logging set up

Your backend is now live on Railway! ðŸš€
